@inject IJSRuntime JSRuntime;

<button class="btn btn-primary" @onclick="OnAddClick">Add @Model.ItemName</button>
<table class="table mt-3">
  <thead>
    <tr>
      <th></th>
      @foreach (var header in Model.Headers)
      {
        <th>@header</th>
      }
      <th></th>
    </tr>
  </thead>
  <tbody>
    @foreach (var item in Model.Items)
    {
    <tr>
      <td><button class="btn btn-warning" @onclick="e => OnEditClick.InvokeAsync(item)">Edit</button></td>
      @foreach(var property in item.GetType().GetProperties())
      {
        <td>@property.GetValue(item)</td>
      }
      <td><button class="btn btn-danger" @onclick="e => ShowConfirm(item)">Delete</button></td>
    </tr>        
    }
  </tbody>
</table>

<div class="modal" id="deletemodal">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title">Delete @Model.ItemName</h4>
        <button type="button" class="close" data-dismiss="modal">&times;</button>
      </div>
      <div class="modal-body">
        Do you want to delete the @Model.ItemName?.ToLower() ?
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-danger" @onclick="OnYesClick">Yes</button>
        <button type="button" class="btn btn-default" data-dismiss="modal" >No</button>
      </div>
    </div>
  </div>
</div>

@code {

    [Parameter]
    public ItemListModel Model { get; set; }

    [Parameter]
    public EventCallback OnAddClick { get; set; }

    [Parameter]
    public EventCallback<object> OnEditClick { get; set; }

    [Parameter]
    public EventCallback<object> OnDeleteClick { get; set; }

    private object itemToDelete;

    private async Task ShowConfirm(object item)
    {
      this.itemToDelete = item;
      await JSRuntime.InvokeVoidAsync("showConfirmDelete", "deletemodal");
    }

    private async Task OnYesClick()
    {
      await OnDeleteClick.InvokeAsync(this.itemToDelete);
      await JSRuntime.InvokeVoidAsync("hideConfirmDelete", "deletemodal");
    }
}