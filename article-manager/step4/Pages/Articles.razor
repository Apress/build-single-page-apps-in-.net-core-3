@page "/articles"
@inject ICRUDService<ArticleListItem, ArticleItem> service;

<h2>Article</h2>
<div class="mt-3">
    @if(!string.IsNullOrEmpty(error))
    {
    <div class="alert alert-danger">
        @error
    </div>
    }

    @if(currentArticle == null)
    {
    <ArticleList 
        ArticleListItems="articleListItems"
        OnAddClick="AddArticle"
        OnEditClick="EditArticle"
        OnDeleteClick="DeleteArticle">
    </ArticleList>
    }
    else 
    {
    <Article
        Item="currentArticle"
        OnSaveClick="SaveArticle" 
        OnCancelClick="ShowList">
    </Article>
    }
</div>

@code {
    private ArticleListItem[] articleListItems;
    private ArticleItem currentArticle;
    private string error; 
    
    protected override async Task OnInitializedAsync()
    {
        await ShowList();
    }

    public async Task ShowList()
    {
        articleListItems = await service.GetList();
        this.currentArticle = null;
    }

    public async Task AddArticle() 
    {
        this.currentArticle = await service.GetNew();
    }

    public async Task EditArticle(ArticleListItem item) 
    {
        this.currentArticle = await service.Get(item.Id);
    }

    public async Task SaveArticle(ArticleItem item)
    {
        try
        {
            if(currentArticle.Id == 0) 
            {
                await service.Create(currentArticle);
            } 
            else
            {
                await service.Update(currentArticle);
            }
            await this.ShowList();
        }
        catch(Exception ex)
        {
            this.error = ex.Message;
        }
    }

    public async Task DeleteArticle(ArticleListItem item)
    {
        try
        {
            await service.Delete(item.Id);
            await this.ShowList();
        }
        catch(Exception ex)
        {
            this.error = ex.Message;
        }
    }
}
